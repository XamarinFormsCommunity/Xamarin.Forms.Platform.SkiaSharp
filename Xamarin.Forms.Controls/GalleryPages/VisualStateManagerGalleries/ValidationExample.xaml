<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Xamarin.Forms.Controls.GalleryPages.VisualStateManagerGalleries.ValidationExample">

	<ContentPage.Resources>
		<ResourceDictionary>

			<Style TargetType="Label" x:Key="ErrorLabel">
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal">
								<VisualState.Setters>
									<Setter Property="IsVisible" Value="False"/>
								</VisualState.Setters>
							</VisualState>
							<VisualState x:Name="Invalid">
								<VisualState.Setters>
									<Setter Property="IsVisible" Value="True"/>
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
				<Setter Property="TextColor" Value="Red"></Setter>
				<Setter Property="Margin" Value="2,10,2,10"></Setter>
			</Style>

			<Style TargetType="Label" x:Key="FormLabel">
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Invalid">
								<VisualState.Setters>
									<Setter Property="TextColor" Value="DarkRed"/>
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
				<Setter Property="Margin" Value="2,10,2,10"></Setter>
			</Style>

			<Style TargetType="Entry">
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Invalid">
								<VisualState.Setters>
									<Setter Property="BackgroundColor" Value="LightCoral"/>
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>

			<Style TargetType="Editor">
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Invalid">
								<VisualState.Setters>
									<Setter Property="BackgroundColor" Value="LightCoral"/>
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>

		</ResourceDictionary>
	</ContentPage.Resources>

	<ContentPage.Content>
        <StackLayout>
            <Label Text="Validation Example Form" FontSize="24" HorizontalOptions="Fill" HorizontalTextAlignment="Center" />

			<Label x:Name="SubjectLabel" Text="Subject (required):" Style="{StaticResource FormLabel}"></Label>
			<Entry x:Name="Subject"></Entry>
			<Label x:Name="SubjectError" Style="{StaticResource ErrorLabel}" Text="Invalid subject"></Label>

			<Label x:Name="MessageLabel" Style="{StaticResource FormLabel}" Text="Message (40 characters maximum):" ></Label>
			<Label x:Name="CharacterCount" Style="{StaticResource FormLabel}"></Label>
			<Editor x:Name="Message"></Editor>
			<Label x:Name="MessageError" Style="{StaticResource ErrorLabel}" Text="Invalid message"></Label>
			
			<Button x:Name="Submit" Text="Submit" Clicked="Submit_OnClicked"></Button>

			<Label Margin="2,20,2,0" 
				   Text="The form above uses the VSM to create a custom 'Invalid' state for the various controls. 
				   
				   When validation runs for the form, it toggles the state of the controls between 'Invalid' and 'Normal', 
				   which determines the appearance of the controls. "></Label>
			
		</StackLayout>
    </ContentPage.Content>
</ContentPage>